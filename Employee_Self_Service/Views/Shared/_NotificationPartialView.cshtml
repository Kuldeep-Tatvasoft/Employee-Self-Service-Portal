@model List<Employee_Self_Service_DAL.ViewModel.NotificationViewModel>
@{
    string? employeeId = Context.Request.Cookies["EmployeeId"];
}

<li class="d-flex align-items-center justify-content-between align-items-center fw-bold text-secondary p-2">
    <span>Notifications(@Model.Select(u => u.NotificationId).Count())</span>
    <button type="button" class="btn-close fs-6" data-bs-dismiss="dropdown" aria-label="Close"
        id="addItemModelCancel"></button>
</li>
<hr class="dropdown-divider">
@foreach (var notification in Model)
{
    <li class="">
        <h6 class="px-2">@notification.NotificationCategory</h6>
        <div class="d-flex p-2 gap-2 ">
            @if (notification.NotificationCategory == "Event")
            {
                <a class="notificationEventDetails d-flex align-items-center text-decoration-none text-black" href=""
                    onclick="OpenEventModel(@notification.CategoryId, @notification.NotificationId)"
                    data-id="@notification.CategoryId" data-bs-toggle="modal" data-bs-target="#eventDetailsModal">

                    <span class="notificationMessage"
                        data-notificationid="@notification.NotificationId">@notification.Message</span>
                </a>
            }
            else if (notification.NotificationCategory == "Leave Request")
            {
                <a class="leaveNotificationMessage d-flex align-items-center text-decoration-none text-black"
                    data-notificationid="@notification.NotificationId" asp-action="ResponseLeaveRequest" asp-controller="Leave"
                    asp-route-requestId="@notification.CategoryId">

                    <span>@notification.Message</span>
                </a>
            }
            else if (notification.NotificationCategory == "Response Request")
            {
                <span>@notification.Message</span>
            }
            <a class=" pb-1 "><i class="read-icon bi bi-circle" data-notificationid="@notification.NotificationId"></i>
            </a>
        </div>
        <hr class="dropdown-divider">
    </li>
}
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>

    $(".read-icon").on('click', function (e) {
        e.stopPropagation();
        $.ajax({
            url: '/Notification/MarkRead',
            type: 'POST',
            data: {
                employeeId: @employeeId,
                notificationId: $(this).data("notificationid")
            },
            success: (response) => {
                if (!response.success) {
                    alert('Error in read mark');
                }
                NotificationDropdown();
                updateNotificationCount();
            },
            error: (error) => {
                alert('Error read mark notification. Please try again.');
            }
        })
    });

    function OpenEventModel(eventId, notificationId) {
        console.log("event details:" + eventId)
        $.ajax({
            url: '/Event/EventDetails',
            data: {
                eventId: eventId
            },
            type: "GET",
            success: function (data) {
                $("#eventDetailsModalContent").html(data);
                console.log("mark as read " + @employeeId + " and " + notificationId);
                $.ajax({
                    url: '/Notification/MarkRead',
                    type: 'POST',
                    data: {
                        employeeId: @employeeId,
                        notificationId: notificationId
                    },
                    success: (response) => {
                        if (!response.success) {
                            alert('Error in read mark on click message');
                        }
                        NotificationDropdown();
                        updateNotificationCount();
                    },
                    error: (error) => {
                        alert('Error read mark notification. Please try again.');
                    }
                })
            },
            error: function () {
                $("#eventDetailsModalContent").html('An error has occurred');
            }
        })
    }

    $(".leaveNotificationMessage").on('click', function (e) {
        e.stopPropagation();
        $.ajax({
            url: '/Notification/MarkRead',
            type: 'POST',
            data: {
                employeeId: @employeeId,
                'notificationId': $(this).data("notificationid")
            },
            success: (response) => {
                if (!response.success) {
                    alert('Error in read mark on click message');
                }
                NotificationDropdown();
                updateNotificationCount();
            },
            error: (error) => {
                alert('Error read mark notification. Please try again.');
            }
        })
    });

    $(".read-icon").hover(function (e) {
        $(this).hasClass("bi-circle") ? $(this).addClass("bi-check-circle text-primary").removeClass("bi-circle") : $(this).removeClass("bi-check-circle text-primary").addClass("bi-circle");
    });

    $(document).ready(function () {
        updateNotificationCount();
    });  
</script>