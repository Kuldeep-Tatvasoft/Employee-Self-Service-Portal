@model Employee_Self_Service_DAL.ViewModel.LeaveRequestPaginationViewModel
@using Employee_Self_Service.DAL.Attributes
@using Employee_Self_Service_BAL.Helpers
@using System.Reflection
<div class="table-responsive px-0">
    <table class="table table-light">
        <thead>
            <tr>
                <th>No</th>
                @{
                    var props = typeof(Employee_Self_Service_DAL.ViewModel.LeaveRequestDetailsViewModel).GetProperties();

                }
                @foreach (var prop in props)
                {
                    var displayAttr = prop.GetCustomAttribute<DisplayColumnAttribute>();

                    if (displayAttr != null && displayAttr.IsVisible)
                    {   
                        if(prop.Name == "EmployeeName")
                        {
                            continue;
                        }
                        <th class="@(prop.PropertyType == typeof(DateTime) ? "" : "text-center")">
                            <a href="javascript:void(0)" onclick="sortBy('@prop.Name')"
                                class="text-decoration-none text-dark">@displayAttr.Name
                                <i class="bi bi-arrow-down-up" id="sort-by-@prop.Name.Replace('.', '-')"
                                    data-direction="asc"></i>
                            </a>
                        </th>
                    }
                }
                <th class="text-center">Action</th>
            </tr>
        </thead>
        <tbody>
            @{
                var count = 1;
            }
            @foreach (var data in Model.RequestList)
            {
                <tr>
                    <td>
                        @count
                        @{
                            count++;
                        }
                    </td>
                    @foreach (var prop in props)
                    {
                        var displayAttr = prop.GetCustomAttribute<DisplayColumnAttribute>();

                        if (displayAttr != null && displayAttr.IsVisible)
                        {   
                        if(prop.Name == "EmployeeName")
                        {
                            continue;
                        }
                            var value = prop.GetValue(data);
                            <td class="text-center">
                                @if (prop.Name == "Status")
                                {
                                    <span class="  @(data.StatusId switch
                            {
                                2 => "approved",
                                5 => "rejected",
                                4 => "cancelled",
                                _ => "pending"
                            }) p-2 text-black fw-lighter fs- text-center">
                                        @value
                                    </span>
                                }
                            
                                else if(value is bool AdhocLeave)
                                {
                                   <input class="form-check-input rounded-0" type="checkbox" id="flexCheckDefault"
                                    value="@(data.AdhocLeave ? "true" : "false")" @(data.AdhocLeave ? "checked" : "") disabled>
                                }
                                else if (value is DateTime dt)
                                {
                                    @dt.ToString("dd-MM-yyyy")
                                }
                                else
                                {
                                    @value
                                }
                            </td>
                        }
                    }
                    

                    
                    @* <td class="">
                        @if (@data.StatusId == 2)
                        {
                            <div class="approved ">
                                @data.Status
                            </div>
                        }
                        else if (@data.StatusId == 5)
                        {
                            <div class="rejected">
                                @data.Status
                            </div>
                        }
                        else if (@data.StatusId == 4)
                        {
                            <div class="cancelled">
                                @data.Status
                            </div>
                        }
                        else
                        {
                            <div class="pending d-flex align-items-center">
                                @data.Status
                            </div>
                        }

                    </td> *@
                    @* <td class="text-center">
                        <input class="form-check-input rounded-0" type="checkbox" id="flexCheckDefault"
                            value="@(data.AdhocLeave ? "true" : "false")" @(data.AdhocLeave ? "checked" : "") disabled>
                    </td> *@
                    <td class="text-center">
                        <div class="d-flex align-items-center justify-content-center">
                            @if (data.StartDate >= DateOnly.FromDateTime(DateTime.Now) && data.StatusId == 3)
                            {
                                <a asp-action="AddEditLeaveRequest" asp-controller="Leave"
                                    asp-route-requestId="@data.LeaveRequestId" class="btn " type="button">
                                    <i class="bi bi-pen"></i>
                                </a>
                            }
                            <a class="btn leaveViewBtn" data-id="@data.LeaveRequestId" data-bs-toggle="modal"
                                data-bs-target="#leaveViewModal">
                                <i class="bi bi-eye"></i>
                            </a>
                            @if (data.StatusId == 3)
                            {
                                <a class="btn deleteLeaveBtn p-0" data-id="@data.LeaveRequestId" data-bs-toggle="modal"
                                    data-bs-target="#deleteLeaveModal">
                                    <i class=" bi bi-trash text-black"></i>
                                </a>
                            }
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>



<!-- Pagination Section -->
<div class="d-flex flex-row justify-content-end  gap-2 mb-3 align-items-center">
    <p class="pt-3 text-black">Items per page</p>
    <div class="dropdown">
        <select class="form-select w-auto " onchange="LeaveRequestPaginationAjax(@Model.Page.CurrentPage)"
            aria-label="Default select example" id="leaveRequestPageSize">
            @if (Model.Page.PageSize != null)
            {
                <option value="5" selected="@(Model.Page.PageSize == 5 ? true : false) selected">5</option>
                <option value="10" selected="@(Model.Page.PageSize == 10 ? true : false)">10</option>
                <option value="15" selected="@(Model.Page.PageSize == 15 ? true : false)">15</option>
            }
        </select>
    </div>
    <p class="pt-3 text-black">Showing @Model.Page!.FromRec - @Model.Page.ToRec of @Model.Page.TotalRecord</p>

    <!-- Previous Button -->
    <button class="btn btn-outline-primary col-auto" onclick="LeaveRequestPaginationAjax(@Model.Page.CurrentPage - 1)"
    @(Model.Page.CurrentPage > 1 ? "" : "disabled")> &lt; </button>

    <!-- Next Button -->
    <button class="btn btn-outline-primary col-auto" onclick="LeaveRequestPaginationAjax(@Model.Page.CurrentPage + 1)"
    @(Model.Page.CurrentPage < Model.Page.TotalPages ? "" : "disabled")> &gt; </button>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>